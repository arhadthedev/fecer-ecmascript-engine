name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-Dwarnings"

jobs:
  linter:
    name: Style
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Lint with Clippy
      # Enable all non-default rules from
      # <https://rust-lang.github.io/rust-clippy/master/index.html>.
      #
      # Use `-W` because `RUSTFLAGS=-Dwarnings` turns warnings into errors
      # anyway.
      #
      # Explicitly allow some diagnostics:
      #
      # - `clippy::restriction`:
      #
      #   > Restriction lints sometimes are in contrast with other lints or even
      #   > go against idiomatic rust. These lints should only be enabled on
      #   > a lint-by-lint basis and with careful consideration.
      #
      #   For example, it requires empty `else` after `else if`, prohibits
      #   non-latin Unicode characters, requires to annotate every `enum` and
      #   `struct` as `#[non_exhaustive]`, and bans `mod.rs` file name. Also,
      #   its `implicit_return` rule outright conflicts with `needless_return`
      #   from `clippy::style`.
      run: >
        cargo clippy
        --all-targets
        --all-features
        --
        -W clippy::pedantic
        -W clippy::nursery
        -W clippy::cargo
  unit:
    name: Library
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Build and run tests
      run: cargo test
